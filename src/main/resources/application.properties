## postgres
spring.datasource.url=jdbc:postgresql://localhost:5000/sample_database
spring.datasource.username=admin
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=true


#important ==================================================
management.tracing.sampling.probability=1.0
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*


#depend on what you want=====================================

management.endpoints.web.exposure.exclude=env,beans
management.metrics.data.repository.autotime.enabled=false

#spring.application.name=labour-service
# For Exemplars to work we need histogram buckets
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# traceID and spanId are predefined MDC keys - we want the logs to include them
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#How to Disable JDBC Instrumentation (id you want to do that put value to false)
jdbc.datasource-proxy.enabled=true
#How to Include the Bind Parameter Values in Spans
jdbc.datasource-proxy.include-parameter-values=true

#How to Choose What To Observe
jdbc.includes=connection, query, fetch
#How to Enable and Configure Query Logging
#To enable the query logging, set the jdbc.datasource-proxy.query.enable-logging property to true.
jdbc.datasource-proxy.query.enable-logging=true

# logging configuration
jdbc.datasource-proxy.logging=slf4j
jdbc.datasource-proxy.query.log-level=DEBUG
jdbc.datasource-proxy.query.logger-name=my.query-logger
jdbc.datasource-proxy.multiline=false

# spring boot log level property
logging.level.my.query-logger=DEBUG